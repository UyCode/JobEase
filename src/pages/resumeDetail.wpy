<template>
  <view class="job">
    <block wx:if="{{isData}}">
      <resumeDetailInfo :personInfo.sync="personInfo"/>
      <repeat wx:for="{{itemData}}" wx:for-index="itemIndex" wx:key="itemIndex" wx:for-item="itemLi">
        <resumeDetailItem :item.sync="itemLi" :itemIndex.sync="itemIndex"/>
      </repeat>
      <block wx:if="{{page == 'mapList'}}">
        <block wx:if="{{personInfo.userName != ''}}">
          <resumeRelease :personInfo.sync="personInfo"/>
        </block>
        <tips></tips>
      </block>
      <footerBtn :page.sync="page" :btnParams.sync="btnParams" :datas.sync="datas"></footerBtn>
    </block>
    <block wx:if="{{!isData}}">
      <nothing :isDataDesc.sync="isDataDesc"></nothing>
    </block>
  </view>
</template>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import API from '../common/api.js'
import resumeDetailItem from '../components/resumeDetailItem'
import resumeDetailInfo from '../components/resumeDetailInfo'
import resumeRelease from '../components/resumeRelease'
import nothing from '../components/nothing'
import footerBtn from '../components/footerBtn'
import tips from '../components/tips'
import request from '../common/request.js'
import { clearArrTrim } from '../utils/utils.js'
@connect({
  state(state) {
    return state
  }
})
export default class Index extends wepy.page {
  onShareAppMessage() {
    return {
      title: '我在这里找替班司机，技术好还便宜',
      path: `/pages/index?id=${this.jobId}&shareType=resumeDetail`,
      imageUrl: 'https://bbs.cehome.com/wxApp/jobResume/imgs/share.png',
      success: function(res) {
        // 转发成功
      },
      fail: function(res) {
        // 转发失败
      }
    }
  }
  config = {
    navigationBarTitleText: '简历详情'
  }
  components = {
    resumeDetailItem,
    resumeDetailInfo,
    resumeRelease,
    tips,
    footerBtn,
    nothing
  }
  data = {
    datas: {},
    itemData: [],
    personInfo: {},
    page: 'mapList',
    btnParams: {},
    isData: true,
    isDataDesc: ''
  }

  methods = {}
  onShow() {}
  events = {
    popupParamsUpdate: res => {
      this.popupInfo = res
      this.$apply()
    }
  }

  onLoad(options) {
    wx.showLoading()
    this.page = options.page
    this.$parent.sensorsPublic.autoTrackPageShow('简历详情页')
    this.jobId = options.id
    this.$apply()
    this.getJobDetail(options.id)
  }
  getJobDetail(id) {
    var userLogin = this.state.login
    var userId = userLogin.status == 'success' ? userLogin.userInfo.uid : ''
    // mapList 表示查看别人的简历详情
    var url =
      this.page == 'mapList'
        ? request.Api.getResumeDetail()
        : request.Api.findByUserId()

    request
      .cehomeRequest(url, { userId: userId, resumeId: id }, 'POST', this)
      .then(res => {
        if (res.statusCode == 200 && res.data.data) {
          var data = res.data.data
          this.datas = data
          // this.isData = true;

          this.$apply()
          this.processingData(data)
        } else {
          this.isData = false
          this.isDataDesc = res.data.msg
          this.$apply()
          // this.$parent.methods.showToast('请求失败');
        }
        wx.hideLoading()
      })
      .catch(err => {
        if (err.errMsg == 'request:fail timeout') {
          this.$parent.methods.showToast('网络请求超时~')
          this.isData = false
          this.isDataDesc = '网络请求超时~'
        } else {
          this.isData = false
          this.isDataDesc = '网络好像有问题，请检查网络~'
          this.$parent.methods.showToast('网络好像有问题，请检查网络~')
        }
      })
  }
  // 处理请求得到的数据便于遍历组件
  //
  processingData(data) {
    var personInfo = {}, //个人信息
      workEx = {}, //职位要求
      workExArray = ['', '', '', '', ''], //职位要求中 list 如截止日期、驾龄要求等 另外两个同理
      resumeMoreInfo = {},
      resumeMoreInfoArray = ['', '', '', '', ''],
      bgArray = []

    for (var key in data) {
      if (key == 'id') {
        this.btnParams[key] = data[key]
        this.btnParams['jobType'] = 2
        this.btnParams['favoriteFlag'] = data.favoriteFlag == 2 ? 1 : 0
        this.btnParams['calledPhoneNumber'] = data.tel
        this.btnParams['complaintUserId'] = data.userId
      } else if (
        key == 'area' ||
        key == 'headPortrait' ||
        key == 'settlementAmountStr' ||
        key == 'statusStr' ||
        key == 'name' ||
        key == 'title' ||
        key == 'favoriteCount' ||
        key == 'updateTimeStr' ||
        key == 'userId' ||
        key == 'auditStatusStr' ||
        key == 'legalizeType' ||
        key == 'userName' ||
        key == 'userAvatar'
      ) {
        personInfo[key] = data[key]
        personInfo['workRegionStr'] =
          data.workRegionStr != '' ? `(${data.workRegionStr})` : ''
      } else if (
        key == 'deviceStr' ||
        key == 'repairFlagStr' ||
        key == 'useHammerFlagStr' ||
        key == 'trailerFlagStr' ||
        key == 'drivingYearsStr'
      ) {
        workEx['title'] = '工作经验'
        var name = '',
          value = data[key].replace(/\n/g, ' ')
        if (value != '' && value != null) {
          switch (key) {
            case 'deviceStr':
              name = '擅长机型'
              workExArray.splice(0, 1, { name: name, value: value })
              break
            case 'useHammerFlagStr':
              name = '破碎锤'
              workExArray.splice(1, 1, { name: name, value: value })
              break
            case 'repairFlagStr':
              name = '维修保养'
              workExArray.splice(2, 1, { name: name, value: value })

              break
            case 'trailerFlagStr':
              name = '拖车驾驶'
              workExArray.splice(3, 1, { name: name, value: value })
              break
            case 'drivingYearsStr':
              name = '工作年限'
              workExArray.splice(4, 1, { name: name, value: value })
              break
            default:
              break
          }
        }
        workEx['list'] = workExArray
      } else if (
        key == 'operationDirectionStr' ||
        key == 'worksRelationStr' ||
        key == 'videoList' ||
        key == 'workExperience' ||
        key == 'askFor'
      ) {
        resumeMoreInfo['title'] = '更多信息'
        var name = '',
          value = data[key]
        if (value != '' && value != null) {
          switch (key) {
            case 'operationDirectionStr':
              name = '操作方向'
              resumeMoreInfoArray.splice(0, 1, { name: name, value: value })
              break
            case 'worksRelationStr':
              name = '擅长工程'
              resumeMoreInfoArray.splice(1, 1, { name: name, value: value })
              break
            case 'videoList':
              name = '工作视频'
              resumeMoreInfoArray.splice(
                3,
                1,
                { name: name, value: '' },
                { value: value }
              )
              break
            case 'workExperience':
              name = '更多经验'
              resumeMoreInfoArray.splice(2, 1, {
                name: name,
                value: `${value}人`
              })
              break
            case 'askFor':
              name = '其他要求'
              resumeMoreInfoArray.splice(4, 1, {
                name: name,
                value: value
              })
            default:
              break
          }
        }
        resumeMoreInfo['list'] = resumeMoreInfoArray
      }
    }
    this.personInfo = personInfo
    // 清楚数组中空元素
    workEx.list = clearArrTrim(workEx.list)
    resumeMoreInfo.list = clearArrTrim(resumeMoreInfo.list)
    bgArray.push(workEx, resumeMoreInfo)
    this.itemData = bgArray
    this.$apply()
  }
}
</script>
<style lang="less">
.job {
  padding: 0 30rpx 200rpx 30rpx;

  .item {
    padding: 30rpx 0;
    border-bottom: 1rpx solid rgba(220, 226, 238, 0.6);
    .salary {
      color: #ff4757;
      letter-spacing: 0.25rpx;
    }
    .header {
      display: flex;
      justify-content: flex-start;
      flex-direction: row;
      align-items: center;
      .span {
        font-size: 32rpx;
        font-weight: bold;
        color: #2d2d33;
        display: flex;
        flex-direction: row;
        align-items: center;
        line-height: 40rpx;
        position: relative;
        &.leftLine {
          &:before {
            content: '';
            position: absolute;
            left: -30rpx;
            top: 50%;
            transform: translateY(-50%);
            width: 6rpx;
            height: 28rpx;
            background: #3b6afb;
          }
        }
        .hint {
          font-size: 24rpx;
          line-height: 40rpx;
          color: #6a6a77;
          font-weight: 400;
          margin-left: 24rpx;
        }
      }
      .icon {
        width: 34rpx;
        height: 34rpx;
        display: block;
        font-family: 'TieJia';
        text-align: center;
        line-height: 34rpx;
        color: #9ea4af;
      }
    }
    .li {
      display: flex;
      flex-direction: row;
      .dian {
        display: flex;
        flex-wrap: wrap;
        text-align: left;
        height: 40rpx;
        line-height: 40rpx;
        padding-right: 30rpx;
        font-size: 28rpx;
        color: #6a6a77;
      }
      .title {
        width: 114rpx;
        height: 40rpx;
        // padding-right: 20rpx;
        box-sizing: border-box;
        color: #6a6977;
        display: block;
        text-align: justify;
        position: relative;
        // line-height: 68rpx;
        font-size: 28rpx;
        flex-shrink: 0;
        &:after {
          content: '';
          width: 100%;
          display: inline-block;
          overflow: hidden;
          height: 0;
        }
      }
    }
  }
}
</style>
